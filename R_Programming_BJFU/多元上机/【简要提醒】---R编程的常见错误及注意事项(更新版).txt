
#R语言编程中的常见错误和注意事项：
#有一些错误是R的初学者和经验丰富的R程序员都可能常犯的。如果程序出错了，请检查以下几方面。
(1) 使用了错误的大小写。 help() 、 Help() 和 HELP() 是三个不同的函数（只有第一个是正确的）。

(2) 忘记使用必要的引号。 install.packages("gclus") 能够正常执行，然而Install.packages(gclus) 将会报错。

(3) 在函数调用时忘记使用括号。例如，要使用 help() 而非 help 。即使函数无需参数，仍需加上 () 。

(4) 在Windows 上，路径名中使用了 \ 。R将反斜杠视为一个转义字符。
setwd("c:\mydata") 会报错。正确的写法是 setwd("c:/mydata") 或setwd("c:\\mydata") 。

(5) 使用了一个尚未载入包中的函数。函数 order.clusters() 包含在包 gclus 中。如果还
没有载入这个包就使用它，将会报错。




###############提醒编程者注意的一些事项：###############

经验丰富的程序员通常会发现R语言的某些方面不太寻常。以下是这门语言中你需要了解
的一些特性。
（1）对象名称中的句点（ . ）没有特殊意义，但美元符号（ $ ）却有着和其他语言中的句点
类似的含义，即指定一个数据框或列表中的某些部分。例如， A$x 是指数据框 A 中的变
量 x 。
（2）R不提供多行注释或块注释功能。你必须以 # 作为多行注释每行的开始。出于调试目的，
你也可以把想让解释器忽略的代码放到语句 if(FALSE){... } 中。将 FALSE 改为 TRUE
即允许这块代码执行。
（3）将一个值赋给某个向量、矩阵、数组或列表中一个不存在的元素时，R将自动扩展这个
数据结构以容纳新值。举例来说，考虑以下代码：
x <- c(8, 6, 4)
x[7] <- 10
x
[1] 8 6 4 NA NA NA 10
通过赋值，向量 x 由三个元素扩展到了七个元素。 x <- x[1:3] 会重新将其缩减回三个
元素。
（4）R中没有标量。标量以单元素向量的形式出现。
（5）R中的下标不从0开始，而从1开始。在上述向量中， x[1] 的值为8。
（6）变量无法被声明。它们在首次被赋值时生成。
要了解更多，参阅John Cook的优秀博文“R programming for those coming from other
languages”（www.johndcook.com/Rlanguagefor_programmers.html）。
那些正在寻找编码风格指南的程序员不妨看看“Google’s R Style Guide”
（http://google-styleguide.googlecode.com/svn/trunk/google-r-style.html）。



（7）R自带了一系列默认包（包括 base 、 datasets 、 utils 、 grDevices 、 graphics 、 stats
以及 methods ），它们提供了种类繁多的默认函数和数据集。其他包可通过下载来进行安装。
安装好以后，它们必须被载入到会话中才能使用。
#命令 search() 可以告诉你哪些包已加载并可使用。

（8）R中，保存为工作空间的文件格式为   .RData
#如果在关闭R时，不小心选择了保存工作空间，而第二次打开R软件后，
#自动加载了该工作空间，则：清除工作空间，用命令：  
file.remove(".RData")


（9）
setwd("D:/DataStatR")   # 等同于命令 setwd("D:\\DataStatR")
getwd()                 # 显示当前工作目录





###############另外，R中有一些术语较为独特，可能会对新用户造成困扰：

（1）在R中， 对象（object）是指可以赋值给变量的任何事物，包括常量、数据结构、函数，
甚至图形。对象都拥有某种模式，描述了此对象是如何存储的，以及某个类，像 print 这样的
泛型函数表明如何处理此对象。
（2）与其他标准统计软件（如SAS、SPSS和Stata）中的数据集类似， 数据框（data frame）是R
中用于存储数据的一种结构：列表示变量，行表示观测。在同一个数据框中可以存储不同类型
（如数值型、字符型）的变量。数据框将是你用来存储数据集的主要数据结构。
（3）因子（factor）是名义型变量或有序型变量。它们在R中被特殊地存储和处理。你将在2.2.5
节中学习因子的处理。其他多数术语应该比较熟悉了，它们基本都遵循统计和计算中术语的定义。





